(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))d(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const i of t.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&d(i)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function d(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();function g(a){const l=a.trim().split(`
`),c=[],d=[];return l.forEach(e=>{if(e.startsWith("startEvent")){const[,t,...i]=e.split(" "),s=i.join(" ").replace(/"/g,"");c.push({id:t,type:"startEvent",label:s})}else if(e.startsWith("task")){const[,t,...i]=e.split(" "),s=i[0]?.replace(/"/g,"")||"",r=i.slice(1).join(" ").replace(/"/g,"")||null;c.push({id:t,type:"task",label:s,actor:r})}else if(e.startsWith("gateway")){const[,t,...i]=e.split(" "),s=i.join(" ").replace(/"/g,"");c.push({id:t,type:"gateway",label:s})}else if(e.startsWith("endEvent")){const[,t,...i]=e.split(" "),s=i.join(" ").replace(/"/g,"");c.push({id:t,type:"endEvent",label:s})}else if(e.includes("-->")){const t=e.match(/(\w+)\s*-->\s*(?:\|(.+?)\|)?\s*(\w+)/);if(t){const[,i,s,r]=t;d.push({from:i,to:r,label:s||null})}}}),{nodes:c,edges:d}}function u({nodes:a,edges:l},c){const d=document.getElementById(c);if(!d)return;const e={},t={},i=120;a.forEach((r,o)=>{e[r.id]=80+o*i,t[r.id]=150});let s=`<svg xmlns="http://www.w3.org/2000/svg" width="600" height="${a.length*i+100}">
    <defs>
      <marker id="arrow" markerWidth="10" markerHeight="10" refX="10" refY="3" orient="auto" markerUnits="strokeWidth">
        <path d="M0,0 L0,6 L9,3 z" fill="#000"></path>
      </marker>
    </defs>`;l.forEach(r=>{const o=t[r.from],n=e[r.from],f=t[r.to],m=e[r.to];s+=`<path d="M${o},${n} L${o},${(n+m)/2} L${f},${(n+m)/2} L${f},${m}"
              stroke="black" stroke-width="2" fill="transparent" marker-end="url(#arrow)"/>`,r.label&&(s+=`<text x="${(o+f)/2}" y="${(n+m)/2-5}" text-anchor="middle" font-size="12" fill="#555">${r.label}</text>`)}),a.forEach(r=>{const o=t[r.id],n=e[r.id];if(r.type==="startEvent")s+=`<circle cx="${o}" cy="${n}" r="30" fill="#e3f2fd" stroke="#1976d2" stroke-width="2"></circle>`,s+=`<text x="${o}" y="${n}" text-anchor="middle" alignment-baseline="middle" font-size="14">${r.label}</text>`;else if(r.type==="endEvent")s+=`<circle cx="${o}" cy="${n}" r="30" fill="#e3f2fd" stroke="#1976d2" stroke-width="2"></circle>`,s+=`<text x="${o}" y="${n}" text-anchor="middle" alignment-baseline="middle" font-size="14">${r.label}</text>`;else if(r.type==="task"){if(s+=`<rect x="${o-50}" y="${n-25}" width="100" height="50" rx="5" ry="5" fill="#fff3e0" stroke="#f57c00" stroke-width="2"></rect>`,s+=`<text x="${o}" y="${n}" text-anchor="middle" alignment-baseline="middle" font-size="14">${r.label}</text>`,r.actor){const f=r.actor.length*6.5,m=o+50-f-8,p=n+18;s+=`<rect x="${m}" y="${p-12}" width="${f+6}" height="16" fill="#fff" stroke="#ccc" rx="2"></rect>`,s+=`<text x="${m+f+3}" y="${p-2}" text-anchor="end" font-size="10" fill="#555">${r.actor}</text>`}}else r.type==="gateway"&&(s+=`<polygon points="${o},${n-40} ${o+40},${n} ${o},${n+40} ${o-40},${n}" fill="#e8f5e9" stroke="#43a047" stroke-width="2"></polygon>`,s+=`<text x="${o}" y="${n}" text-anchor="middle" alignment-baseline="middle" font-size="14">${r.label}</text>`)}),s+="</svg>",d.innerHTML=s}const h={preprocess:g,render:u},$=document.getElementById("editor"),y=document.getElementById("diagram");window.renderDiagram=async()=>{const a=$.value,l=h.preprocess(a);l?h.render(l,"diagram"):y.innerHTML='<div style="color:red">No diagram parsed.</div>'};document.getElementById("renderBtn").addEventListener("click",window.renderDiagram);window.renderDiagram();
